import{j as e}from"./jsx-runtime-Cf8x2fCZ.js";import{R as g}from"./index-G8LIXM5I.js";import{c as a}from"./clsx-B-dksMZM.js";import{T as c}from"./Typography-B9xY8qhe.js";const v=({label:o,description:r,iconStart:t,iconEnd:n,image:m,imageSize:d="small",className:p="",typographyVariant:u="caption",iconSize:l="default",...f},y)=>{const h=a("moonstone-listItem","flexRow",p),i=m&&!t;return e.jsxs("li",{ref:y,className:a(h),...f,children:[i&&e.jsx("figure",{className:a(`moonstone-listItem-image moonstone-listItem-image_${d}`,"flexRow","alignCenter"),children:m}),t&&e.jsx("div",{className:"moonstone-listItem_iconStart flexRow_center alignCenter",children:e.jsx(t.type,{...t.props,size:l,className:a(`moonstone-icon_${l}`,t.props.className)})}),e.jsxs("div",{className:a(i?"flexCol_center":"flexCol","flexFluid"),children:[e.jsx(c,{isNowrap:!0,className:a(i?null:"flexFluid"),variant:u,component:"span",children:o}),r&&e.jsx(c,{variant:"caption",weight:"default",component:"span",className:a("moonstone-listItem_description"),children:r})]}),n&&e.jsx("div",{className:"moonstone-listItem_iconEnd",children:e.jsx(n.type,{...n.props,size:l,className:a(`moonstone-icon_${l}`,n.props.className)})})]})},s=g.forwardRef(v);s.displayName="ListItem";try{s.displayName="ListItem",s.__docgenInfo={description:"",displayName:"ListItem",props:{label:{defaultValue:null,description:"ListItem label",name:"label",required:!0,type:{name:"ReactNode"}},image:{defaultValue:null,description:"Optional image to display to describe the menu item. Cannot be used in conjunction with the iconStart property.",name:"image",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},className:{defaultValue:{value:""},description:"Additional classname",name:"className",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"Optional description to display to describe the item",name:"description",required:!1,type:{name:"string"}},iconStart:{defaultValue:null,description:"A leading icon display before the label. Cannot be used in conjunction with the image property.",name:"iconStart",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},iconEnd:{defaultValue:null,description:"A trailing icon display at the end of ListItem",name:"iconEnd",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},imageSize:{defaultValue:{value:"small"},description:"Sets pre-defined max height/width to image; defaults to small",name:"imageSize",required:!1,type:{name:"enum",value:[{value:'"big"'},{value:'"small"'}]}},iconSize:{defaultValue:{value:"default"},description:"Which icon size to render.",name:"iconSize",required:!1,type:{name:"enum",value:[{value:'"big"'},{value:'"small"'},{value:'"default"'}]}},typographyVariant:{defaultValue:{value:"caption"},description:"Which variant to pass to the inner typography component. The default is caption",name:"typographyVariant",required:!1,type:{name:"enum",value:[{value:'"body"'},{value:'"button"'},{value:'"caption"'},{value:'"title"'},{value:'"heading"'},{value:'"subheading"'}]}}}}}catch{}export{s as L};
