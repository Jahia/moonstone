import{j as e}from"./jsx-runtime-Cf8x2fCZ.js";import{B as a}from"./Button-PNeZ7oHi.js";import{D as V}from"./Dropdown-CMrFVMEU.js";import{R as _}from"./index-G8LIXM5I.js";import{c as n}from"./clsx-B-dksMZM.js";/* empty css                 */import{T as g}from"./Typography-C8hU4Ja4.js";import{S as N}from"./Add-BLw4h-Kv.js";import{S as i}from"./MoreVert-DsReYBZM.js";import{S as t}from"./Language-B4Y52-CS.js";import{S as x}from"./Close-Dt0TtWGW.js";import{S as M}from"./File-RR5IslU1.js";import{F as r}from"./Field-Bs0VIFW6.js";import{F as o}from"./FieldSelector-B--cAP--.js";import{I as c}from"./Input-DsgrsWfn.js";import{C as l}from"./Chip-DESNhL41.js";import{F as T}from"./FieldBoolean-7K_V5fFv.js";import{T as A}from"./Textarea-2bhoM2A4.js";import{a as E,R as j}from"./RadioItem-EPPf3-Fw.js";import{C as f}from"./CardSelector-DaHnuRFc.js";import{E as z}from"./EmptyCardSelector-QBIx8VLF.js";import"./index-yBjzXJbu.js";/* empty css               */import"./Loader-DsiRlRl8.js";import"./Tag-CXHcMMTy.js";import"./Search-DSeLwkIx.js";import"./ChevronDown-DW4Cg-no.js";import"./MenuItem--HqnKiEf.js";import"./_commonjsHelpers-CqkleIqs.js";import"./SearchInput-B5d-1pc8.js";import"./ListItem-Crrcgnf0.js";import"./TreeView-BRFIKiCq.js";import"./ChevronRight-CtX5Dnjk.js";import"./CheckboxUnchecked-CIfxf0rQ.js";import"./Separator-ChTYNnEP.js";/* empty css              */import"./HandleDrag-D6n6KY9w.js";import"./Checkbox-DDz2wGje.js";import"./RadioUnchecked-DaPA0oal.js";import"./Image-DYAdcomu.js";const m=_.forwardRef(({id:p,label:I,helper:u,children:b,className:q,buttons:h,...B},w)=>e.jsxs("fieldset",{ref:w,id:p,className:n("moonstone-fieldset","flexCol_nowrap",q),...B,children:[e.jsxs("div",{className:n("flexRow_nowrap","flexFluid","alignCenter"),children:[e.jsx(g,{isNowrap:!0,className:"flexRow_nowrap flexFluid alignCenter",component:"legend",variant:"heading",weight:"bold",children:I}),h&&h]}),u&&e.jsx(g,{variant:"caption",className:n("moonstone-fieldset_helper"),children:u}),b&&e.jsx("div",{className:n("moonstone-fieldset_children","flexCol_nowrap"),children:b})]}));m.displayName="Fieldset";try{m.displayName="Fieldset",m.__docgenInfo={description:"",displayName:"Fieldset",props:{label:{defaultValue:null,description:"Fieldset label",name:"label",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"Fieldset's id",name:"id",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},helper:{defaultValue:null,description:"Fieldset helper",name:"helper",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Define fieldset field(s)",name:"children",required:!0,type:{name:"ReactNode"}},buttons:{defaultValue:null,description:"Fieldset action(s)",name:"buttons",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}}}}}catch{}const L="data:text/markdown;base64,",Re={title:"Components/Fieldset",component:m,tags:["beta"],parameters:{layout:"padded",actions:{argTypesRegex:"^on.*"},notes:{markdown:L}},argTypes:{buttons:{control:!1},children:{control:!1}}},s={args:{label:"Fieldset",buttons:e.jsx(a,{icon:e.jsx(i,{}),variant:"ghost"}),helper:"Fieldset information",children:e.jsx(r,{id:"field",label:"Field",chips:e.jsxs(e.Fragment,{children:[e.jsx(l,{color:"accent",label:"Required"}),e.jsx(l,{icon:e.jsx(t,{}),label:"Shared by all languages"})]}),buttons:e.jsxs(e.Fragment,{children:[e.jsx(a,{icon:e.jsx(N,{}),label:"Add"}),e.jsx(a,{icon:e.jsx(i,{}),variant:"ghost"})]}),helper:"information",children:e.jsx(o,{selector:e.jsx(c,{size:"big",placeholder:"Input value"})})})}},d={args:{...s.args,children:e.jsxs(e.Fragment,{children:[e.jsx(r,{id:"field-multiple",label:"Field",chips:e.jsxs(e.Fragment,{children:[e.jsx(l,{color:"accent",label:"Required"}),e.jsx(l,{icon:e.jsx(t,{}),label:"Shared by all languages"})]}),buttons:e.jsxs(e.Fragment,{children:[e.jsx(a,{icon:e.jsx(N,{}),label:"Add"}),e.jsx(a,{icon:e.jsx(i,{}),variant:"ghost"})]}),helper:"information",children:e.jsxs(e.Fragment,{children:[e.jsx(o,{buttons:e.jsx(a,{icon:e.jsx(i,{})}),selector:e.jsx(c,{size:"big",placeholder:"Input value"})}),e.jsx(o,{buttons:e.jsx(a,{icon:e.jsx(i,{})}),selector:e.jsx(c,{size:"big",placeholder:"Input value"})}),e.jsx(o,{buttons:e.jsx(a,{icon:e.jsx(i,{})}),selector:e.jsx(c,{size:"big",placeholder:"Input value"})})]})}),e.jsx(T,{id:"field-boolean",label:"Field Boolean",helper:"information",chips:e.jsxs(e.Fragment,{children:[e.jsx(l,{color:"accent",label:"Required"}),e.jsx(l,{icon:e.jsx(t,{}),label:"Shared by all languages"})]}),buttons:e.jsx(a,{icon:e.jsx(i,{}),variant:"ghost"})}),e.jsx(r,{id:"field-dropdown",label:"Field",chips:e.jsxs(e.Fragment,{children:[e.jsx(l,{color:"accent",label:"Required"}),e.jsx(l,{icon:e.jsx(t,{}),label:"Shared by all languages"})]}),buttons:e.jsx(a,{icon:e.jsx(i,{}),variant:"ghost"}),helper:"information",children:e.jsx(o,{selector:e.jsx(V,{variant:"outlined",label:"Input value",className:"flexFluid",data:[{label:"option 1",value:"1"},{label:"option 2",value:"2"},{label:"option 3 with very long long label label label label label label label label",value:"3"}]})})}),e.jsx(r,{hasError:!0,errorMessage:"There is an error",id:"field-textarea",label:"Field",chips:e.jsxs(e.Fragment,{children:[e.jsx(l,{color:"accent",label:"Required"}),e.jsx(l,{icon:e.jsx(t,{}),label:"Shared by all languages"})]}),buttons:e.jsx(a,{icon:e.jsx(i,{}),variant:"ghost"}),helper:"information",children:e.jsx(o,{selector:e.jsx(A,{id:"moonstone-textarea",placeholder:"Input value"})})}),e.jsx(r,{id:"field-radio",label:"Field",chips:e.jsxs(e.Fragment,{children:[e.jsx(l,{color:"accent",label:"Required"}),e.jsx(l,{icon:e.jsx(t,{}),label:"Shared by all languages"})]}),helper:"information",children:e.jsx(o,{selector:e.jsxs(E,{name:"radio",children:[e.jsx(j,{id:"radio1",label:"Yes",value:"Yes"}),e.jsx(j,{id:"radio2",label:"No",value:"No"})]})})}),e.jsx(r,{id:"field-cardselectors",label:"Field",chips:e.jsxs(e.Fragment,{children:[e.jsx(l,{color:"accent",label:"Required"}),e.jsx(l,{icon:e.jsx(t,{}),label:"Shared by all languages"})]}),buttons:e.jsx(a,{icon:e.jsx(i,{}),variant:"ghost"}),helper:"information",children:e.jsxs(e.Fragment,{children:[e.jsx(o,{selector:e.jsx(f,{id:"cardSelector1",displayName:"Item name",systemName:"system name",information:"information",thumbnailType:"icon"}),buttons:e.jsx(a,{icon:e.jsx(x,{})})}),e.jsx(o,{selector:e.jsx(f,{id:"cardSelector2",displayName:"Item name",systemName:"system name",information:"information",thumbnailType:"icon"}),buttons:e.jsx(a,{icon:e.jsx(x,{})})}),e.jsx(o,{selector:e.jsx(z,{iconStart:e.jsx(M,{}),id:"emptyCardSelector",label:"Add item"})})]})})]})}};var F,y,S;s.parameters={...s.parameters,docs:{...(F=s.parameters)==null?void 0:F.docs,source:{originalSource:`{
  args: {
    label: 'Fieldset',
    buttons: <Button icon={<MoreVert />} variant="ghost" />,
    helper: 'Fieldset information',
    children: <Field id="field" label="Field" chips={<><Chip color="accent" label="Required" /><Chip icon={<Language />} label="Shared by all languages" /></>} buttons={<><Button icon={<Add />} label="Add" /><Button icon={<MoreVert />} variant="ghost" /></>} helper="information"><FieldSelector selector={<Input size="big" placeholder="Input value" />} /></Field>
  }
}`,...(S=(y=s.parameters)==null?void 0:y.docs)==null?void 0:S.source}}};var v,C,R;d.parameters={...d.parameters,docs:{...(v=d.parameters)==null?void 0:v.docs,source:{originalSource:`{
  args: {
    ...SingleField.args,
    children: <>
        <Field id="field-multiple" label="Field" chips={<><Chip color="accent" label="Required" /><Chip icon={<Language />} label="Shared by all languages" /></>} buttons={<><Button icon={<Add />} label="Add" /><Button icon={<MoreVert />} variant="ghost" /></>} helper="information">
            <>
                <FieldSelector buttons={<Button icon={<MoreVert />} />} selector={<Input size="big" placeholder="Input value" />} />
                <FieldSelector buttons={<Button icon={<MoreVert />} />} selector={<Input size="big" placeholder="Input value" />} />
                <FieldSelector buttons={<Button icon={<MoreVert />} />} selector={<Input size="big" placeholder="Input value" />} />
            </>
        </Field>
        <FieldBoolean id="field-boolean" label="Field Boolean" helper="information" chips={<><Chip color="accent" label="Required" /><Chip icon={<Language />} label="Shared by all languages" /></>} buttons={<Button icon={<MoreVert />} variant="ghost" />} />
        <Field id="field-dropdown" label="Field" chips={<><Chip color="accent" label="Required" /><Chip icon={<Language />} label="Shared by all languages" /></>} buttons={<Button icon={<MoreVert />} variant="ghost" />} helper="information">
            <FieldSelector selector={<Dropdown variant="outlined" label="Input value" className="flexFluid" data={[{
          label: 'option 1',
          value: '1'
        }, {
          label: 'option 2',
          value: '2'
        }, {
          label: 'option 3 with very long long label label label label label label label label',
          value: '3'
        }]} />} />
        </Field>
        <Field hasError errorMessage="There is an error" id="field-textarea" label="Field" chips={<><Chip color="accent" label="Required" /><Chip icon={<Language />} label="Shared by all languages" /></>} buttons={<Button icon={<MoreVert />} variant="ghost" />} helper="information">
            <FieldSelector selector={<Textarea id="moonstone-textarea" placeholder="Input value" />} />
        </Field>
        <Field id="field-radio" label="Field" chips={<><Chip color="accent" label="Required" /><Chip icon={<Language />} label="Shared by all languages" /></>} helper="information">
            <FieldSelector selector={<RadioGroup name="radio"><RadioItem id="radio1" label="Yes" value="Yes" /><RadioItem id="radio2" label="No" value="No" /></RadioGroup>} />
        </Field>
        <Field id="field-cardselectors" label="Field" chips={<><Chip color="accent" label="Required" /><Chip icon={<Language />} label="Shared by all languages" /></>} buttons={<Button icon={<MoreVert />} variant="ghost" />} helper="information">
            <>
                <FieldSelector selector={<CardSelector id="cardSelector1" displayName="Item name" systemName="system name" information="information" thumbnailType="icon" />} buttons={<Button icon={<Close />} />} />
                <FieldSelector selector={<CardSelector id="cardSelector2" displayName="Item name" systemName="system name" information="information" thumbnailType="icon" />} buttons={<Button icon={<Close />} />} />
                <FieldSelector selector={<EmptyCardSelector iconStart={<File />} id="emptyCardSelector" label="Add item" />} />
            </>
        </Field>
    </>
  }
}`,...(R=(C=d.parameters)==null?void 0:C.docs)==null?void 0:R.source}}};const Ne=["SingleField","MultipleFields"];export{d as MultipleFields,s as SingleField,Ne as __namedExportsOrder,Re as default};
