import{j as e}from"./jsx-runtime-Cf8x2fCZ.js";import{c as a}from"./clsx-B-dksMZM.js";import{T as u}from"./Typography-D0S_EBmN.js";const l=({label:s,description:o,iconStart:t,iconEnd:i,image:r,imageSize:d="small",className:c="",typographyVariant:p="caption",iconSize:m="default",...f})=>{const y=a("moonstone-listItem","flexRow",c),n=r&&!t;return e.jsxs("li",{className:a(y),...f,children:[n&&e.jsx("figure",{className:a(`moonstone-listItem-image moonstone-listItem-image_${d}`,"flexRow","alignCenter"),children:r}),t&&e.jsx("div",{className:"moonstone-listItem_iconStart flexRow_center alignCenter",children:e.jsx(t.type,{...t.props,size:m})}),e.jsxs("div",{className:a(n?"flexCol_center":"flexCol","flexFluid"),children:[e.jsx(u,{isNowrap:!0,className:a(n?null:"flexFluid"),variant:p,component:"span",children:s}),o&&e.jsx(u,{variant:"caption",weight:"default",component:"span",className:a("moonstone-listItem_description"),children:o})]}),i&&e.jsx("div",{className:"moonstone-listItem_iconEnd",children:e.jsx(i.type,{...i.props,size:m})})]})};l.displayName="ListItem";try{l.displayName="ListItem",l.__docgenInfo={description:"",displayName:"ListItem",props:{className:{defaultValue:{value:""},description:"Additional classname",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"ListItem label",name:"label",required:!0,type:{name:"ReactNode"}},description:{defaultValue:null,description:"Optional description to display to describe the item",name:"description",required:!1,type:{name:"string"}},iconStart:{defaultValue:null,description:"A leading icon display before the label. Cannot be used in conjunction with the image property.",name:"iconStart",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},iconEnd:{defaultValue:null,description:"A trailing icon display at the end of ListItem",name:"iconEnd",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},image:{defaultValue:null,description:"Optional image to display to describe the menu item. Cannot be used in conjunction with the iconStart property.",name:"image",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},imageSize:{defaultValue:{value:"small"},description:"Sets pre-defined max height/width to image; defaults to small",name:"imageSize",required:!1,type:{name:"enum",value:[{value:'"big"'},{value:'"small"'}]}},typographyVariant:{defaultValue:{value:"caption"},description:"Which variant to pass to the inner typography component. The default is caption",name:"typographyVariant",required:!1,type:{name:"enum",value:[{value:'"body"'},{value:'"button"'},{value:'"caption"'},{value:'"title"'},{value:'"heading"'},{value:'"subheading"'}]}},iconSize:{defaultValue:{value:"default"},description:"Which icon size to render. The default is small",name:"iconSize",required:!1,type:{name:"enum",value:[{value:'"big"'},{value:'"small"'},{value:'"default"'}]}}}}}catch{}export{l as L};
