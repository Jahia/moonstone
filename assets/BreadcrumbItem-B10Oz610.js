import{j as e}from"./jsx-runtime-Cf8x2fCZ.js";import{R as c,r as m}from"./index-G8LIXM5I.js";import{c as r}from"./clsx-B-dksMZM.js";import{S as u}from"./ChevronRight-CtX5Dnjk.js";import{B as p}from"./Button-CgeSGZUR.js";const t=({children:a,className:n,...i})=>{const l=c.Children.toArray(a);return!a||l.length<1?null:e.jsx("nav",{className:r("moonstone-breadcrumb",n),"aria-label":"breadcrumb",...i,children:e.jsx("ol",{className:r("flexRow_nowrap","alignCenter"),children:l.map((o,d)=>e.jsxs(m.Fragment,{children:[o,d<l.length-1&&e.jsx("li",{className:r("moonstone-breadcrumb_separator","flexRow_center","alignCenter"),children:e.jsx(u,{"aria-hidden":!0})})]},o.key))})})};t.displayName="Breadcrumb";try{t.displayName="Breadcrumb",t.__docgenInfo={description:"",displayName:"Breadcrumb",props:{className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"BreadcrumbItems children",name:"children",required:!1,type:{name:"ReactElement<BreadcrumbItemProps, string | JSXElementConstructor<any>> | ReactElement<BreadcrumbItemProps, string | JSXElementConstructor<...>>[]"}}}}}catch{}const s=({className:a="",...n})=>e.jsx("li",{className:r("moonstone-breadcrumbItem","flexRow_center"),children:e.jsx(p,{...n,variant:"ghost",size:"small",className:r(a)})});s.displayName="BreadcrumbItem";try{s.displayName="BreadcrumbItem",s.__docgenInfo={description:"",displayName:"BreadcrumbItem",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}},className:{defaultValue:{value:""},description:"Additional classname",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Color of the button",name:"color",required:!1,type:{name:"enum",value:[{value:'"accent"'},{value:'"danger"'},{value:'"default"'}]}},onClick:{defaultValue:null,description:"Function triggered on click",name:"onClick",required:!1,type:{name:"MouseEventHandler<Element>"}},isDisabled:{defaultValue:null,description:"Whether the component should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},iconEnd:{defaultValue:null,description:"Icon component displays after the label",name:"iconEnd",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},icon:{defaultValue:null,description:"Icon component displays before the label",name:"icon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},isReversed:{defaultValue:null,description:"Whether the component should use reversed colors, it useful with dark background",name:"isReversed",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Whether the button is loading",name:"isLoading",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label of the BreadcrumbItem",name:"label",required:!1,type:{name:"string"}}}}}catch{}export{s as B,t as a};
