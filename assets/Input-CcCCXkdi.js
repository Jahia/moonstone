import{j as a}from"./jsx-runtime-Cf8x2fCZ.js";import{S as t,B as l}from"./SearchInput-CMI4jILd.js";const n=e=>e.variant==="search"?(console.warn("The prop `variant` of the Input component is deprecated, and it will be removed in a next release. If you need the `search` variant, please use the dedicated component `SearchInput`"),a.jsx(t,{...e,variant:"outlined"})):a.jsx(l,{...e});n.displayName="Input";try{n.displayName="Input",n.__docgenInfo={description:"",displayName:"Input",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},placeholder:{defaultValue:null,description:"Initial placeholder text to appear in the input field",name:"placeholder",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Whether the size of the input should be default or big",name:"size",required:!1,type:{name:"enum",value:[{value:'"big"'},{value:'"default"'}]}},value:{defaultValue:null,description:"Value to exist in the input field. Define the component as controlled when it set. (Controlled)",name:"value",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"Role of the input",name:"role",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the component should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input should be read-only. It's still submittable.",name:"isReadOnly",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Which icon to use at the beginning of the input",name:"icon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},variant:{defaultValue:null,description:`Which icon to use at the beginning of the input
@deprecatedValues 'text' and 'search' use specific component instead`,name:"variant",required:!1,type:{name:"enum",value:[{value:'"search"'},{value:'"text"'},{value:'"ghost"'},{value:'"outlined"'}]}},onClear:{defaultValue:null,description:"Function - when passed in, the Cancel icon appears at the end of the input and its click event is passed back when the Cancel icon is clicked",name:"onClear",required:!1,type:{name:"MouseEventHandler<Element>"}},focusOnField:{defaultValue:null,description:"Whether the input should be focused when displayed.",name:"focusOnField",required:!1,type:{name:"boolean"}}}}}catch{}export{n as I};
