import{j as e}from"./jsx-runtime-Cf8x2fCZ.js";import{R as s}from"./index-G8LIXM5I.js";import{c as l}from"./clsx-B-dksMZM.js";/* empty css              */import{T as i}from"./Typography-D0S_EBmN.js";const o=s.forwardRef(({id:t,label:u,helper:d,chips:p,buttons:a,children:f,hasError:c,errorMessage:m,className:y,...h},x)=>e.jsxs("div",{ref:x,id:t,className:l("moonstone-field","flexCol_nowrap",c&&"moonstone-field_error",y),...h,children:[e.jsxs("div",{className:l("flexRow_nowrap","flexFluid","alignCenter"),children:[e.jsxs("div",{className:"flexRow_nowrap flexFluid alignCenter",children:[e.jsx(i,{isNowrap:!0,component:"label",weight:"bold",children:u}),p&&e.jsx("div",{className:l("moonstone-field_chips","flexRow_nowrap"),children:p})]}),a&&e.jsx("div",{className:l("moonstone-field_buttons","flexRow_nowrap"),children:s.Children.map(a,n=>n.props&&n.props.children?s.Children.map(n.props.children,r=>{const _=r.props.icon?r.props.icon.name:r.props.label;return r&&e.jsx(r.type,{size:"default",...r.props},`btn-${_}`)}):a&&e.jsx(a.type,{size:"default",...a.props}))})]}),d&&e.jsx(i,{variant:"caption",className:l("moonstone-field_helper"),children:d}),e.jsxs("div",{className:l("moonstone-field_children","flexCol_nowrap"),children:[f,c&&m&&e.jsx(i,{className:l("moonstome-field_errorMessage"),variant:"caption",children:m})]})]}));o.displayName="Field";try{o.displayName="Field",o.__docgenInfo={description:"",displayName:"Field",props:{label:{defaultValue:null,description:"Field label",name:"label",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Field's id",name:"id",required:!0,type:{name:"string"}},children:{defaultValue:null,description:"Define field selector(s)",name:"children",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},helper:{defaultValue:null,description:"Field helper",name:"helper",required:!1,type:{name:"string"}},buttons:{defaultValue:null,description:"Field action(s)",name:"buttons",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},chips:{defaultValue:null,description:"Field chip(s)",name:"chips",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},hasError:{defaultValue:null,description:"Display as error",name:"hasError",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"Error message",name:"errorMessage",required:!1,type:{name:"string"}}}}}catch{}export{o as F};
