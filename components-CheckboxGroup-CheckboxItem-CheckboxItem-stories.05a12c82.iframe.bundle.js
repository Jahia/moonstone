"use strict";(self.webpackChunk_jahia_moonstone=self.webpackChunk_jahia_moonstone||[]).push([[1466],{"./src/components/CheckboxGroup/CheckboxItem/CheckboxItem.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Playground:()=>Playground,Uncontrolled:()=>Uncontrolled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_preview_api__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("storybook/internal/preview-api"),_CheckboxItem__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/CheckboxGroup/CheckboxItem/CheckboxItem.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__={title:"Components/CheckboxGroup/CheckboxItem",component:_CheckboxItem__WEBPACK_IMPORTED_MODULE_2__.H,parameters:{layout:"centered",knobs:{disable:!0},storysource:{disable:!0}},argTypes:{onClick:{action:"onClick"},onBlur:{action:"onBlur"},onFocus:{action:"onFocus"}}},Uncontrolled={render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CheckboxItem__WEBPACK_IMPORTED_MODULE_2__.H,args),args:{label:"Uncontrolled CheckboxItem"}},Controlled={render:args=>{const[{checked},updateArgs]=(0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_1__.useArgs)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CheckboxItem__WEBPACK_IMPORTED_MODULE_2__.H,_extends({checked,onChange:()=>{updateArgs({isChecked:!checked})}},args))},args:{label:"Controlled CheckboxItem"}},Playground={render:args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CheckboxItem__WEBPACK_IMPORTED_MODULE_2__.H,args),args:{id:"playground-item",label:"Play with me",description:"Use the storybook controls to update this element",value:"playground-value"}},__namedExportsOrder=["Uncontrolled","Controlled","Playground"];Uncontrolled.parameters={...Uncontrolled.parameters,docs:{...Uncontrolled.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <CheckboxItem {...args} />;\n  },\n  args: {\n    label: 'Uncontrolled CheckboxItem'\n  }\n}",...Uncontrolled.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"{\n  render: (args: CheckboxItemProps) => {\n    const [{\n      checked\n    }, updateArgs] = useArgs();\n    const handleOnChange = () => {\n      updateArgs({\n        isChecked: !checked\n      });\n    };\n    return <CheckboxItem checked={checked} onChange={() => handleOnChange()} {...args} />;\n  },\n  args: {\n    label: 'Controlled CheckboxItem'\n  }\n}",...Controlled.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <CheckboxItem {...args} />;\n  },\n  args: {\n    id: 'playground-item',\n    label: 'Play with me',\n    description: 'Use the storybook controls to update this element',\n    value: 'playground-value'\n  }\n}",...Playground.parameters?.docs?.source}}}}}]);