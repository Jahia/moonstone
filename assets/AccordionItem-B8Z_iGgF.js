import{j as t}from"./jsx-runtime-Cf8x2fCZ.js";import{r as h,R as A}from"./index-G8LIXM5I.js";import{c as s}from"./clsx-B-dksMZM.js";import{o as v}from"./useAccessibleClick-Dg2YirTu.js";import{T as x}from"./Typography-C8hU4Ja4.js";const C={isReversed:!1},I=h.createContext(C),m=({children:e,openedItem:r,isReversed:n=!1,className:l,onSetOpenedItem:o,...c})=>{const a={currentItem:r,onSetOpenedItem:o,isReversed:n};return t.jsx(I.Provider,{value:a,children:t.jsx("div",{className:s(l,"flexFluid","moonstone-accordion",{"moonstone-reversed":n}),...c,children:e})})};try{m.displayName="ControlledAccordion",m.__docgenInfo={description:"",displayName:"ControlledAccordion",props:{isReversed:{defaultValue:{value:"false"},description:"Whether the component should use reversed colors, it useful with dark background",name:"isReversed",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Content of the component",name:"children",required:!0,type:{name:"ReactElement<AccordionItemProps, string | JSXElementConstructor<any>> | ReactElement<AccordionItemProps, string | JSXElementConstructor<...>>[]"}},openedItem:{defaultValue:null,description:"Id of the AccordionItem opened. Define the component as controlled when it set (controlled)",name:"openedItem",required:!0,type:{name:"string"}},onSetOpenedItem:{defaultValue:null,description:"Function to set the opened AccordionItem (controlled)",name:"onSetOpenedItem",required:!0,type:{name:"(id: string) => void"}}}}}catch{}const p=({defaultOpenedItem:e,children:r,...n})=>{const[l,o]=h.useState(e),c=a=>{o(d=>d===a?null:a)};return t.jsx(m,{openedItem:l,onSetOpenedItem:c,...n,children:r})};try{p.displayName="UncontrolledAccordion",p.__docgenInfo={description:"",displayName:"UncontrolledAccordion",props:{isReversed:{defaultValue:null,description:"Whether the component should use reversed colors, it useful with dark background",name:"isReversed",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Content of the component",name:"children",required:!0,type:{name:"ReactElement<AccordionItemProps, string | JSXElementConstructor<any>> | ReactElement<AccordionItemProps, string | JSXElementConstructor<...>>[]"}},defaultOpenedItem:{defaultValue:null,description:"Id of the AccordionItem opened by default (uncontrolled)",name:"defaultOpenedItem",required:!1,type:{name:"string"}}}}}catch{}const f=({children:e,defaultOpenedItem:r,openedItem:n,onSetOpenedItem:l,...o})=>e?typeof n>"u"?t.jsx(p,{defaultOpenedItem:r,...o,children:e}):t.jsx(m,{openedItem:n,onSetOpenedItem:l,...o,children:e}):null;f.displayName="Accordion";try{f.displayName="Accordion",f.__docgenInfo={description:"",displayName:"Accordion",props:{isReversed:{defaultValue:null,description:"Whether the component should use reversed colors, it useful with dark background",name:"isReversed",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Content of the component",name:"children",required:!0,type:{name:"ReactElement<AccordionItemProps, string | JSXElementConstructor<any>> | ReactElement<AccordionItemProps, string | JSXElementConstructor<...>>[]"}},openedItem:{defaultValue:null,description:"Id of the AccordionItem opened. Define the component as controlled when it set (controlled)",name:"openedItem",required:!1,type:{name:"string"}},onSetOpenedItem:{defaultValue:null,description:"Function to set the opened AccordionItem (controlled)",name:"onSetOpenedItem",required:!1,type:{name:"(id: string) => void"}},defaultOpenedItem:{defaultValue:null,description:"Id of the AccordionItem opened by default (uncontrolled)",name:"defaultOpenedItem",required:!1,type:{name:"string"}}}}}catch{}const y=({id:e,label:r,icon:n=null,onClick:l=()=>{},className:o,children:c,...a})=>{const d=A.useContext(I),i=d.currentItem===e,g=(u,_)=>{l(u,!_),d.onSetOpenedItem(e)};return t.jsxs("section",{...a,className:s("moonstone-accordionItem",{"moonstone-reversed":d.isReversed},"flexCol",i?"flexFluid":null,o),children:[t.jsxs("header",{className:s("moonstone-accordionItem_header",{"moonstone-selected":i,"moonstone-reversed":d.isReversed},"flexRow","alignCenter"),"aria-controls":e,"aria-expanded":i,...v(u=>g(u,i)),role:"accordion-item",children:[n&&t.jsx("div",{className:s("moonstone-accordionItem_iconContainer","flexRow_center","alignCenter"),children:n&&t.jsx(n.type,{...n.props,size:"big"})}),t.jsx(x,{isNowrap:!0,variant:"subheading",weight:i?"bold":"default",className:s("flexFluid"),children:r})]}),i&&t.jsx("div",{className:s("moonstone-accordionItem_content","flexFluid","flexCol_nowrap"),role:"region",children:c})]})};y.displayName="AccordionItem";try{y.displayName="AccordionItem",y.__docgenInfo={description:"",displayName:"AccordionItem",props:{id:{defaultValue:null,description:"Specific identifier to define AccordionItem",name:"id",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Label displays as accordion title",name:"label",required:!0,type:{name:"string"}},onClick:{defaultValue:{value:"() => undefined"},description:"Function triggered on click",name:"onClick",required:!1,type:{name:"(e: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>, isOpen: boolean) => void"}},icon:{defaultValue:{value:"null"},description:"Icon displays before the label",name:"icon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},children:{defaultValue:null,description:"Content of the component",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{y as A,f as a};
