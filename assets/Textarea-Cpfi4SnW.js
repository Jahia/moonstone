import{j as s}from"./jsx-runtime-Cf8x2fCZ.js";import{R as h,r as y}from"./index-G8LIXM5I.js";import{c as T}from"./clsx-B-dksMZM.js";const r=h.forwardRef(({value:e,id:a,placeholder:t,isDisabled:n=!1,isReadOnly:l=!1,isResizable:o=!1,className:u,onChange:m,onBlur:c,onFocus:f,...p},x)=>s.jsx("textarea",{ref:x,className:T("moonstone-textarea",o&&"moonstone-textarea_resizable",u),value:e,id:a,placeholder:t,disabled:n,readOnly:l,onChange:(!n||!l)&&m,onBlur:(!n||!l)&&c,onFocus:(!n||!l)&&f,...p}));r.displayName="ControlledTextarea";try{r.displayName="ControlledTextarea",r.__docgenInfo={description:"",displayName:"ControlledTextarea",props:{value:{defaultValue:null,description:"Textarea's value",name:"value",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"Textarea's function onChange",name:"onChange",required:!0,type:{name:"(event: ChangeEvent<HTMLTextAreaElement>) => void"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Required id",name:"id",required:!0,type:{name:"string"}},onFocus:{defaultValue:null,description:"Textarea's function onFocus",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLTextAreaElement, Element>) => void"}},onBlur:{defaultValue:null,description:"Textarea's function onBlur",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLTextAreaElement, Element>) => void"}},isDisabled:{defaultValue:{value:"false"},description:"Whether the textarea should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:{value:"false"},description:"Whether the textarea should be read-only",name:"isReadOnly",required:!1,type:{name:"boolean"}},isResizable:{defaultValue:{value:"false"},description:"Whether the textarea should be resizable",name:"isResizable",required:!1,type:{name:"boolean"}}}}}catch{}const i=({defaultValue:e,onChange:a,...t})=>{const[n,l]=y.useState(e),o=u=>{l(u.target.value),typeof a<"u"&&a(u)};return s.jsx(r,{value:n,className:"uncontrolled",onChange:o,...t})};i.displayName="UncontrolledTextarea";try{i.displayName="UncontrolledTextarea",i.__docgenInfo={description:"",displayName:"UncontrolledTextarea",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLTextAreaElement>"}},id:{defaultValue:null,description:"Required id",name:"id",required:!0,type:{name:"string"}},onFocus:{defaultValue:null,description:"Textarea's function onFocus",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLTextAreaElement, Element>) => void"}},onBlur:{defaultValue:null,description:"Textarea's function onBlur",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLTextAreaElement, Element>) => void"}},isDisabled:{defaultValue:null,description:"Whether the textarea should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the textarea should be read-only",name:"isReadOnly",required:!1,type:{name:"boolean"}},isResizable:{defaultValue:null,description:"Whether the textarea should be resizable",name:"isResizable",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Textarea's default value",name:"defaultValue",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Textarea's function onChange",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLTextAreaElement>) => void"}}}}}catch{}const d=({value:e,onChange:a,...t})=>typeof e>"u"?s.jsx(i,{onChange:a,...t}):s.jsx(r,{value:e,onChange:a,...t});d.displayName="Textarea";try{d.displayName="Textarea",d.__docgenInfo={description:"",displayName:"Textarea",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLTextAreaElement>"}},id:{defaultValue:null,description:"Required id",name:"id",required:!0,type:{name:"string"}},onFocus:{defaultValue:null,description:"Textarea's function onFocus",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLTextAreaElement, Element>) => void"}},onBlur:{defaultValue:null,description:"Textarea's function onBlur",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLTextAreaElement, Element>) => void"}},isDisabled:{defaultValue:null,description:"Whether the textarea should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the textarea should be read-only",name:"isReadOnly",required:!1,type:{name:"boolean"}},isResizable:{defaultValue:null,description:"Whether the textarea should be resizable",name:"isResizable",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Textarea's value",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Textarea's function onChange",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLTextAreaElement>) => void) & ((event: ChangeEvent<HTMLTextAreaElement>) => void)"}},defaultValue:{defaultValue:null,description:"Textarea's default value",name:"defaultValue",required:!1,type:{name:"string"}}}}}catch{}export{d as T};
