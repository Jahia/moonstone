(self.webpackChunk_jahia_moonstone=self.webpackChunk_jahia_moonstone||[]).push([[8051],{"./src/components/GlobalStyle/GlobalStyle.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alignment:()=>Alignment,Direction:()=>Direction,Justify:()=>Justify,__namedExportsOrder:()=>__namedExportsOrder,default:()=>GlobalStyle_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);var clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs");const justifyOptions=[null,"center","reverse","between","nowrap"],alignOptions=["start","center","end"],cssWrap={border:"2px solid red",height:"300px"},ItemContainer=({title,direction,justify,align})=>{const cssDirection="row"===direction?"flexRow":"flexCol",cssJustify=justify?`${cssDirection}_${justify}`:cssDirection,cssAlign=align?`align${align.charAt(0).toUpperCase()+align.slice(1)}`:null;let css=(0,clsx.A)(cssJustify,cssAlign);return react.createElement("section",{style:{marginBottom:"48px"}},react.createElement("h2",{className:"flexRow alignCenter",style:{marginBottom:"24px"}},title,":",react.createElement("code",{style:{fontFamily:"monospace",fontSize:"12px",padding:"4px",marginLeft:"8px",background:"#eee",borderRadius:"4px",color:"#444"}},css)),react.createElement("div",{className:(0,clsx.A)(cssJustify,cssAlign),style:cssWrap},react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null),react.createElement(Item,null)))},Item=()=>react.createElement("div",{style:{width:"80px",height:"80px",backgroundColor:"#ccc",border:"1px solid #000"}});function displayItems(direction,type){let display=[],arrayOptions=[];"justify"===type?arrayOptions=justifyOptions:"align"===type&&(arrayOptions=alignOptions);for(let option of arrayOptions)display.push(react.createElement(ItemContainer,{title:`${type} ${(0,clsx.A)(option)}`,direction,justify:"justify"===type?option:"center",align:"align"===type?option:"center"}));return display}ItemContainer.propTypes={title:prop_types_default().string,justify:prop_types_default().oneOf(justifyOptions),align:prop_types_default().oneOf(alignOptions),direction:prop_types_default().oneOf(["row","col"])};const GlobalStyle_stories={title:"Utilities/Layout",parameters:{componentSubtitle:"Layout",notes:{markdown:"# Layout CSS\n\nWe provide some useful global classes with flex-box to help you to positionning elements.\nThe classes should be added on container element to enable a flex context.\nThe classnames try to fit to CSS flex properties.\n\n\n\n## Direction\n\nFirst you have to define the flex direction horizontal or vertical layout.\n\n| CSS        | Description         |\n| ---------- | ------------------- |\n| `.flexRow` | Horizontal **row**  |\n| `.flexCol` | Vertical **column** |\n\nThen you can add a modifier to justify content, the justification follow the direction flow. Modifiers extend the default class, for example you don't need to repeat `.flexRow.flexRow_center` you just have to write `.flexRow_center`.\n\n| CSS                                   | Description                                       |\n| ------------------------------------- | ------------------------------------------------- |\n| `.flexRow_reverse` `.flexCol_reverse` | Content is placed at the **end** of the container |\n| `.flexRow_center` `.flexCol_center`   | Content is placed at **center** of the container  |\n| `.flexRow_between` `.flexCol_between` | Content is **distributed** equally between items  |\n| `.flexRow_nowrap` `.flexCol_nowrap`   | Content is forced onto **one line**               |\n\n\n\n## Alignment\n\nTo align items in the opposite axis of the flow. Under the wood this classes just add `align-items` property.\n\n| CSS           | Description                      |\n| ------------- | -------------------------------- |\n| `alignCenter` | Pack items around the **center** |\n| `alignStart`  | Pack items from the **start**    |\n| `alignEnd`    | Pack items from the **bottom**   |\n\n\n\n## Helpers\n\n| CSS          | Description                                                                                                           |\n| ------------ | --------------------------------------------------------------------------------------------------------------------- |\n| `.flexFluid` | The Item take all the place disponible. You must use this classe under a flex context. This class just add `flex: 1`. |\n"}}},Direction=()=>react.createElement(react.Fragment,null,react.createElement(ItemContainer,{title:"Horizontal flow",direction:"row"}),react.createElement(ItemContainer,{title:"Vertical flow",direction:"col"})),Justify=()=>react.createElement(react.Fragment,null,displayItems("row","justify")),Alignment=()=>react.createElement(react.Fragment,null,displayItems("row","align")),__namedExportsOrder=["Direction","Justify","Alignment"];Direction.parameters={...Direction.parameters,docs:{...Direction.parameters?.docs,source:{originalSource:'() => <>\n        <ItemContainer title="Horizontal flow" direction="row" />\n        <ItemContainer title="Vertical flow" direction="col" />\n    </>',...Direction.parameters?.docs?.source}}},Justify.parameters={...Justify.parameters,docs:{...Justify.parameters?.docs,source:{originalSource:"() => <>{displayItems('row', 'justify')}</>",...Justify.parameters?.docs?.source}}},Alignment.parameters={...Alignment.parameters,docs:{...Alignment.parameters?.docs,source:{originalSource:"() => <>{displayItems('row', 'align')}</>",...Alignment.parameters?.docs?.source}}}},"./node_modules/clsx/dist/clsx.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f)}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}}]);