import{j as n}from"./jsx-runtime-Cf8x2fCZ.js";import{r as _}from"./index-G8LIXM5I.js";import{c as i}from"./clsx-B-dksMZM.js";/* empty css               */import{L as q}from"./Loader-DsiRlRl8.js";import{T as x}from"./Typography-D0S_EBmN.js";const m=({label:t="",size:e="default",isReversed:f=!1,isDisabled:p=!1,isLoading:o=!1,icon:a=null,iconEnd:u=null,variant:s="default",color:l="default",className:c=null,onClick:y,...v})=>{let r="default";const b=_.useRef(null);e==="small"&&(r="light"),e==="big"&&(r="semiBold");const h=d=>{y(d)},g=s==="default"&&(l==="accent"||l==="danger");return n.jsxs("button",{ref:b,className:i({"moonstone-button":s!=="default"||l!=="default"},`moonstone-button_${e}`,`moonstone-button${s==="default"?"":`_${s}`}${l==="default"?"":`_${l}`}`,{"moonstone-icon":t&&(a||u)},{"moonstone-icon-button":!t},{"moonstone-reverse":f},{"moonstone-button_loading":o},"alignCenter",c),type:"button",disabled:p||o,onClick:d=>h(d),...v,children:[a&&!o&&n.jsx(a.type,{...a.props,size:e==="big"?"default":e}),o&&n.jsx(q,{size:"small",isReversed:g,className:i({"moonstone-button_loaderOverlay":!a})}),t&&n.jsx(x,{isNowrap:!0,component:"span",variant:"button",isUpperCase:e==="big",weight:r,className:i("flexFluid"),children:t}),t&&u&&n.jsx(u.type,{...u.props,size:e==="big"?"default":e})]})};m.displayName="Button";try{m.displayName="Button",m.__docgenInfo={description:"",displayName:"Button",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}},label:{defaultValue:{value:""},description:"Text displays inside the button",name:"label",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"default"},description:"Size of the button",name:"size",required:!1,type:{name:"enum",value:[{value:'"big"'},{value:'"small"'},{value:'"default"'}]}},icon:{defaultValue:{value:"null"},description:"Icon component displays before the label",name:"icon",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},iconEnd:{defaultValue:{value:"null"},description:"Icon component displays after the label",name:"iconEnd",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},variant:{defaultValue:{value:"default"},description:"Style of the button",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"ghost"'},{value:'"outlined"'}]}},color:{defaultValue:{value:"default"},description:"Color of the button",name:"color",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"accent"'},{value:'"danger"'}]}},isDisabled:{defaultValue:{value:"false"},description:"Whether the component should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},isReversed:{defaultValue:{value:"false"},description:"Whether the component should use reversed colors, it useful with dark background",name:"isReversed",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:{value:"false"},description:"Whether the button is loading",name:"isLoading",required:!1,type:{name:"boolean"}},className:{defaultValue:{value:"null"},description:"Additional classname",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Function triggered on click",name:"onClick",required:!1,type:{name:"MouseEventHandler<Element>"}}}}}catch{}export{m as B};
