import{j as a}from"./jsx-runtime-Cf8x2fCZ.js";import{R as g,r as h}from"./index-G8LIXM5I.js";import{c as u}from"./clsx-B-dksMZM.js";import{o as y}from"./useAccessibleClick-Bdvd2I0f.js";const _=({className:e,checked:n=!1,value:l,onChange:r=()=>{},isDisabled:t,...d},c)=>{const i=h.useRef();return a.jsxs("div",{ref:c,className:u("moonstone-switch",{"moonstone-switch_checked":n,"moonstone-switch_disabled":t},e),children:[a.jsx("input",{...d,ref:i,className:u("moonstone-switch_input"),type:"checkbox",value:l,checked:n,"aria-checked":n,disabled:t,...y({onClick:f=>{var p;return r(f,l,(p=i.current)==null?void 0:p.checked)},disabled:t,role:"checkbox"})}),a.jsx("span",{className:u("moonstone-switch_icon")})]})},o=g.forwardRef(_);o.displayName="ControlledSwitch";try{o.displayName="ControlledSwitch",o.__docgenInfo={description:"",displayName:"ControlledSwitch",props:{value:{defaultValue:null,description:"The value of the input element, used when submitting an HTML form",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:{value:"() => undefined"},description:"Function triggered on change",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>, value: string, checked: boolean) => void"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the component should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}}}}}catch{}const s=({defaultChecked:e=!1,onChange:n,value:l,...r})=>{const[t,d]=h.useState(e);return a.jsx(o,{...r,value:l,checked:t,onChange:c=>{const i=!t;d(i),typeof n=="function"&&n(c,l,i)}})};s.displayName="UncontrolledSwitch";try{s.displayName="UncontrolledSwitch",s.__docgenInfo={description:"",displayName:"UncontrolledSwitch",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},value:{defaultValue:null,description:"The value of the input element, used when submitting an HTML form",name:"value",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the component should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Function triggered on change",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>, value: string, checked: boolean) => void"}}}}}catch{}const m=({checked:e,...n})=>typeof e>"u"?a.jsx(s,{...n}):a.jsx(o,{checked:e,...n});m.displayName="Switch";try{m.displayName="Switch",m.__docgenInfo={description:"",displayName:"Switch",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},value:{defaultValue:null,description:"The value of the input element, used when submitting an HTML form",name:"value",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Additional classname",name:"className",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the component should be disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Function triggered on change",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>, value: string, checked: boolean) => void"}}}}}catch{}export{m as S};
